name: release

on:
  push:
    tags: ["v[0-9].[0-9]+.[0-9]+"]

permissions:
  contents: write

jobs:
  build_foxe:
    name: build_foxe
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Package
        run: npm run package

      - name: Extract version
        id: extract_version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "version=$version" >> $GITHUB_ENV

      - name: Update changelog file
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          yarn commitizen init cz-conventional-changelog --save-dev --force --save-exact
          HEADER=$(awk '/^---/{exit} {print}' CHANGELOG.md)
          yarn conventional-changelog -p angular -o TEMP.md -r o
          echo "$HEADER" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          cat TEMP.md >> CHANGELOG.md
          rm TEMP.md

      - name: Fetch initial commit history
        id: fetch_initial_commit_history
        run: |
          echo "::set-output name=history::$(cat initial_commit_history.md)"

      - name: Update changelog
        run: |
          TARGET_TAG="0.0.1"
          CHANGELOG_FILE="CHANGELOG.md"
          INITIAL_HISTORY="${{ steps.fetch_initial_commit_history.outputs.history }}"

          ESCAPED_HISTORY=$(printf '%s\n' "$INITIAL_HISTORY" | sed 's/[&/\]/\\&/g')

          if grep -q "## $TARGET_TAG (" "$CHANGELOG_FILE"; then
            echo "Tag ## $TARGET_TAG found. Updating $CHANGELOG_FILE..."
            sed -i "/## $TARGET_TAG (/,/^## /{//!d}" "$CHANGELOG_FILE"

            awk -v tag="## $TARGET_TAG " -v history="$INITIAL_HISTORY" '
            {
              print;
              if ($0 ~ tag) {
                print history;
              }
            }' "$CHANGELOG_FILE" > TEMP.md && mv TEMP.md "$CHANGELOG_FILE"

            echo "Initial commit history inserted under ## $TARGET_TAG."
          else
            echo "Error: Tag ## $TARGET_TAG not found in $CHANGELOG_FILE."
            exit 1
          fi

      - name: Commit changelog changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: update changelog for $GITHUB_REF"

      - name: Create GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ASAM OSI Converter ${{ env.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lichtblick.asam-osi-converter-${{ env.version }}.foxe
          asset_name: lichtblick.asam-osi-converter-${{ env.version }}.foxe
          asset_content_type: application/octet-stream

      - name: Upload Changelog
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CHANGELOG.md
          asset_name: CHANGELOG.md
          asset_content_type: text/markdown
